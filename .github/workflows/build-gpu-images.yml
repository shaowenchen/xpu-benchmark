name: Build GPU Docker Images

on:
  push:
    branches: [ main, master ]
    paths:
      - 'gpu/**'
      - '.github/workflows/build-gpu-images.yml'
  workflow_dispatch:
    inputs:
      image_type:
        description: 'Image type to build'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - training
          - inference
          - stress

env:
  REGISTRY: docker.io
  IMAGE_NAME: shaowenchen/xpu-benchmark

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_type: [training, inference, stress]
        include:
          - image_type: training
            dockerfile: gpu/training/Dockerfile
            context: gpu/training
            tag: gpu-training
          - image_type: inference
            dockerfile: gpu/inference/Dockerfile
            context: gpu/inference
            tag: gpu-inference
          - image_type: stress
            dockerfile: gpu/stress/Dockerfile
            context: gpu/stress
            tag: gpu-stress

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=${{ matrix.tag }}-{{sha}},enable={{is_default_branch}}
          type=raw,value=${{ matrix.tag }}-latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Build summary
      if: always()
      run: |
        echo "Built image: ${{ matrix.tag }}"
        echo "Context: ${{ matrix.context }}"
        echo "Dockerfile: ${{ matrix.dockerfile }}" 