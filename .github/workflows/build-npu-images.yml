name: Build NPU Docker Images

on:
  push:
    branches: [ main, master ]
    paths:
      - 'npu/**'
      - 'config/npu/**'
      - '.github/workflows/build-npu-images.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'npu/**'
      - 'config/npu/**'
      - '.github/workflows/build-npu-images.yml'
  workflow_dispatch:
    inputs:
      image_type:
        description: 'Image type to build'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - training
          - inference
          - stress
      platform:
        description: 'Platform to build'
        required: false
        default: 'both'
        type: choice
        options:
          - amd64
          - arm64
          - both

env:
  REGISTRY: docker.io
  IMAGE_NAME: shaowenchen/xpu-benchmark

jobs:
  build-training-amd64:
    runs-on: ubuntu-latest
    if: (github.event.inputs.image_type == 'all' || github.event.inputs.image_type == 'training' || github.event.inputs.image_type == '') && (github.event.inputs.platform == 'amd64' || github.event.inputs.platform == 'both' || github.event.inputs.platform == '')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=npu-training-latest

    - name: Build and push Docker image (AMD64)
      uses: docker/build-push-action@v5
      with:
        context: npu/training
        file: npu/training/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64

    - name: Build summary
      if: always()
      run: |
        echo "Built image: npu-training (AMD64)"
        echo "Context: npu/training"
        echo "Dockerfile: npu/training/Dockerfile"

  build-training-arm64:
    runs-on: ubuntu-latest
    if: (github.event.inputs.image_type == 'all' || github.event.inputs.image_type == 'training' || github.event.inputs.image_type == '') && (github.event.inputs.platform == 'arm64' || github.event.inputs.platform == 'both' || github.event.inputs.platform == '')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=npu-training-latest

    - name: Build and push Docker image (ARM64)
      uses: docker/build-push-action@v5
      with:
        context: npu/training
        file: npu/training/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/arm64

    - name: Build summary
      if: always()
      run: |
        echo "Built image: npu-training (ARM64)"
        echo "Context: npu/training"
        echo "Dockerfile: npu/training/Dockerfile"

  build-inference-amd64:
    runs-on: ubuntu-latest
    needs: [build-training-amd64, build-training-arm64]
    if: (github.event.inputs.image_type == 'all' || github.event.inputs.image_type == 'inference' || github.event.inputs.image_type == '') && (github.event.inputs.platform == 'amd64' || github.event.inputs.platform == 'both' || github.event.inputs.platform == '')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=npu-inference-latest

    - name: Build and push Docker image (AMD64)
      uses: docker/build-push-action@v5
      with:
        context: npu/inference
        file: npu/inference/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64

    - name: Build summary
      if: always()
      run: |
        echo "Built image: npu-inference (AMD64)"
        echo "Context: npu/inference"
        echo "Dockerfile: npu/inference/Dockerfile"

  build-inference-arm64:
    runs-on: ubuntu-latest
    needs: [build-training-amd64, build-training-arm64]
    if: (github.event.inputs.image_type == 'all' || github.event.inputs.image_type == 'inference' || github.event.inputs.image_type == '') && (github.event.inputs.platform == 'arm64' || github.event.inputs.platform == 'both' || github.event.inputs.platform == '')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=npu-inference-latest

    - name: Build and push Docker image (ARM64)
      uses: docker/build-push-action@v5
      with:
        context: npu/inference
        file: npu/inference/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/arm64

    - name: Build summary
      if: always()
      run: |
        echo "Built image: npu-inference (ARM64)"
        echo "Context: npu/inference"
        echo "Dockerfile: npu/inference/Dockerfile"

  build-stress-amd64:
    runs-on: ubuntu-latest
    needs: [build-inference-amd64, build-inference-arm64]
    if: (github.event.inputs.image_type == 'all' || github.event.inputs.image_type == 'stress' || github.event.inputs.image_type == '') && (github.event.inputs.platform == 'amd64' || github.event.inputs.platform == 'both' || github.event.inputs.platform == '')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=npu-stress-latest

    - name: Build and push Docker image (AMD64)
      uses: docker/build-push-action@v5
      with:
        context: npu/stress
        file: npu/stress/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64

    - name: Build summary
      if: always()
      run: |
        echo "Built image: npu-stress (AMD64)"
        echo "Context: npu/stress"
        echo "Dockerfile: npu/stress/Dockerfile"

  build-stress-arm64:
    runs-on: ubuntu-latest
    needs: [build-inference-amd64, build-inference-arm64]
    if: (github.event.inputs.image_type == 'all' || github.event.inputs.image_type == 'stress' || github.event.inputs.image_type == '') && (github.event.inputs.platform == 'arm64' || github.event.inputs.platform == 'both' || github.event.inputs.platform == '')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=npu-stress-latest

    - name: Build and push Docker image (ARM64)
      uses: docker/build-push-action@v5
      with:
        context: npu/stress
        file: npu/stress/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/arm64

    - name: Build summary
      if: always()
      run: |
        echo "Built image: npu-stress (ARM64)"
        echo "Context: npu/stress"
        echo "Dockerfile: npu/stress/Dockerfile" 