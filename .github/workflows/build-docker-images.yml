name: Build Docker Images

on:
  push:
    branches: [ main, master ]
    paths:
      - 'benchmarks/**'
      - '.github/workflows/build-docker-images.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'benchmarks/**'
      - '.github/workflows/build-docker-images.yml'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - gpu
        - npu

env:
  REGISTRY: docker.io
  IMAGE_NAME: shaowenchen/xpu-benchmark

jobs:
  build-gpu-training:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: gpu-training
            dockerfile: benchmarks/gpu/training/Dockerfile
            context: benchmarks/gpu/training
            tags: gpu-training
          - name: gpu-inference
            dockerfile: benchmarks/gpu/inference/Dockerfile
            context: benchmarks/gpu/inference
            tags: gpu-inference
          - name: gpu-stress
            dockerfile: benchmarks/gpu/stress/Dockerfile
            context: benchmarks/gpu/stress
            tags: gpu-stress
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push GPU image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.tags }}-${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-npu-training:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: npu-training
            dockerfile: benchmarks/npu/training/Dockerfile
            context: benchmarks/npu/training
            tags: npu-training
          - name: npu-inference
            dockerfile: benchmarks/npu/inference/Dockerfile
            context: benchmarks/npu/inference
            tags: npu-inference
          - name: npu-stress
            dockerfile: benchmarks/npu/stress/Dockerfile
            context: benchmarks/npu/stress
            tags: npu-stress
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push NPU image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.tags }}-${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-all:
    runs-on: ubuntu-latest
    needs: [build-gpu-training, build-npu-training]
    if: github.event.inputs.build_type == 'all' || github.event_name != 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push all images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: benchmarks/gpu/training/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:gpu-training-latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:gpu-inference-latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:gpu-stress-latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:npu-training-latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:npu-inference-latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:npu-stress-latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-images:
    runs-on: ubuntu-latest
    needs: [build-gpu-training, build-npu-training]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test GPU Training Image
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:gpu-training-${{ github.sha }} --help || echo "GPU training image test completed"

      - name: Test NPU Training Image
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:npu-training-${{ github.sha }} --help || echo "NPU training image test completed"

  publish-release:
    runs-on: ubuntu-latest
    needs: [build-all, test-images]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Build and push release images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: benchmarks/gpu/training/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 